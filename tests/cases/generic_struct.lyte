

assert(cond: bool) → void

return_generic_struct → GenericStruct<i32> {
    var s: GenericStruct<i32>
    s.x = 42
    return s
}

struct GenericStruct {
    x: typevar T
}

generic_struct_fn(s: GenericStruct<A>) {
    assert(true)
}

generic_struct_check(s: GenericStruct<A>, f: GenericStruct<A> → i32) {
    assert(f(s) == 42)
}

test {
    var s: GenericStruct<i32>
    s = return_generic_struct()
    assert(s.x == 42)
    generic_struct_fn(s)
    generic_struct_check(s, |s| s.x )
}
