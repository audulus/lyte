

assert(cond: bool) → void

struct GenericStruct<T> {
    x: typevar T
}

return_generic_struct → GenericStruct<i32> {
    var s: GenericStruct<i32>
    s.x = 42
    return s
}

generic_struct_fn<A>(s: GenericStruct<A>) {
    assert(true)
}

generic_struct_check<A>(s: GenericStruct<A>, f: GenericStruct<A> → i32) {
    assert(f(s) == 42)
}

//test {
//    var s: GenericStruct<i32>
//    s = return_generic_struct()
//    assert(s.x == 42)
//    generic_struct_fn(s)
//    generic_struct_check(s, |s| s.x )
//}
